plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
    id 'base'
    id 'com.gradle.plugin-publish' version '1.3.1'
}

group = 'choreo.constants.generator'
version = '1.0.0'

repositories {
    // Use Maven Central for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()

    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    // Use JUnit test framework for unit tests
    testImplementation 'junit:junit:4.13'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

gradlePlugin {
    website = 'https://github.com/SleipnirGroup/Choreo'
    vcsUrl = 'https://github.com/SleipnirGroup/Choreo'

    // Define the plugin
    plugins {
        genChoreo {
            id = "choreo.constants.generator"
            implementationClass = "choreo.GenConstantsTask"
            displayName = "Choreo Constants Generator"
            description = 'Auto-generates java file(s) containing constants and variables from your .chor file.'
            tags.set(['choreo', 'auto generate', 'auto code'])
        }
    }
}

// Add a source set and a task for a functional test suite
def functionalTest = sourceSets.create('functionalTest')
gradlePlugin.testSourceSets(functionalTest)

configurations[functionalTest.implementationConfigurationName].extendsFrom(configurations.testImplementation)

def functionalTestTask = tasks.register('functionalTest', Test) {
    testClassesDirs = functionalTest.output.classesDirs
    classpath = configurations[functionalTest.runtimeClasspathConfigurationName] + functionalTest.output
}

tasks.check.configure {
    // Run the functional tests as part of `check`
    dependsOn(functionalTestTask)
}
